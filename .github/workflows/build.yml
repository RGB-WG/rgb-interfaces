name: Build

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  CARGO_TERM_COLOR: always

jobs:
  default:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      # NOTE: Dont use nix here everything should be based on the ubuntu-latest
      - name: Install rust stable
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - name: Latest Ubuntu build check
        uses: actions-rs/cargo@v1
        with:
          command: check
          args: --workspace
  no-default:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install Nix
        uses: cachix/install-nix-action@v26
      - name: Latest Ubuntu build check no features
        run: nix develop .#stable -c cargo check --workspace --no-default-features
  features:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        feature:
          - serde
    steps:
      - uses: actions/checkout@v4
      - uses: actions/checkout@v4
      - name: Install Nix
        uses: cachix/install-nix-action@v26
      - name: Check feature ${{ matrix.feature }} only
        run: nix develop .#stable -c cargo check --no-default-features --features=${{ matrix.feature }}
      - name: Check feature ${{ matrix.feature }} with defaults
        run: nix develop .#stable -c cargo check --features=${{ matrix.feature }}
  platforms:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-20.04, ubuntu-22.04, macos-11, macos-12, windows-2019, windows-2022 ]
    steps:
      - uses: actions/checkout@v4
      # NOTE: Don't use nix in platform checks - everything should be based on the host system
      - name: Install rust stable
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - name: Build with all features
        uses: actions-rs/cargo@v1
        with:
          command: check
          args: --workspace --all-targets --all-features
  toolchains:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        toolchain: [ nightly, beta, stable, msrv ]
    steps:
      - name: checkout
        uses: actions/checkout@v4
      - name: Install Nix
        uses: cachix/install-nix-action@v26
      - name: Check rgb-interfaces
        run: nix develop ".#${{ matrix.toolchain }}" -c cargo check --workspace --all-targets --all-features
